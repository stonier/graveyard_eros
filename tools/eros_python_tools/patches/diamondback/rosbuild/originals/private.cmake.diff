--- private.cmake	2011-02-24 10:06:05.704317382 +0900
+++ ../private.cmake	2011-02-16 18:15:08.865106030 +0900
@@ -188,7 +188,7 @@
 
   # Check that the file exists, #1621
   set(_file_name _file_name-NOTFOUND)
-  find_file(_file_name ${file} ${PROJECT_SOURCE_DIR} /)
+  find_file(_file_name ${file} ${PROJECT_SOURCE_DIR} / NO_CMAKE_FIND_ROOT_PATH)
   if(NOT _file_name)
     message(FATAL_ERROR "Can't find rostest file \"${file}\"")
   endif(NOT _file_name)
@@ -228,7 +228,7 @@
 
   # Check that the file exists, #1621
   set(_file_name _file_name-NOTFOUND)
-  find_file(_file_name ${file} ${PROJECT_SOURCE_DIR} /)
+  find_file(_file_name ${file} ${PROJECT_SOURCE_DIR} / NO_CMAKE_FIND_ROOT_PATH)
   if(NOT _file_name)
     message(FATAL_ERROR "Can't find pyunit file \"${file}\"")
   endif(NOT _file_name)
@@ -265,7 +265,7 @@
 macro(_rosbuild_add_roslaunch_check file)
   # Check that the file exists, #1621
   set(_file_name _file_name-NOTFOUND)
-  find_file(_file_name ${file} ${CMAKE_CURRENT_SOURCE_DIR} /)
+  find_file(_file_name ${file} ${CMAKE_CURRENT_SOURCE_DIR} / NO_CMAKE_FIND_ROOT_PATH)
   if(NOT _file_name)
     message(FATAL_ERROR "Can't find roslaunch file or directory \"${file}\"")
   endif(NOT _file_name)
@@ -330,8 +330,12 @@
     set_target_properties(${lib} PROPERTIES OUTPUT_NAME ${libname})
     # Also add -fPIC, because CMake leaves it out when building static
     # libs, even though it's necessary on 64-bit machines for linking this
-    # lib against shared libs downstream.
-    rosbuild_add_compile_flags(${lib} -fPIC)
+    # lib against shared libs downstream. The only exception is mingw gcc
+    # which doesn't specifically need to worry about building
+    # position independant libs.
+    if(NOT MINGW)
+        rosbuild_add_compile_flags(${lib} -fPIC)
+    endif()
   endif(${type} STREQUAL STATIC)
   
   # Add explicit dependency of each file on our manifest.xml and those of
@@ -341,7 +345,7 @@
   set(_srclist ${ARGN})
   foreach(_src ${_srclist})
     set(_file_name _file_name-NOTFOUND)
-    find_file(_file_name ${_src} ${CMAKE_CURRENT_SOURCE_DIR} /)
+    find_file(_file_name ${_src} ${CMAKE_CURRENT_SOURCE_DIR} / NO_CMAKE_FIND_ROOT_PATH)
     if(NOT _file_name)
       message("[rosbuild] Couldn't find source file ${_src}; assuming that it is in ${CMAKE_CURRENT_SOURCE_DIR} and will be generated later")
       set(_file_name ${CMAKE_CURRENT_SOURCE_DIR}/${_src})
