--- CMakeLists.txt	2011-01-23 19:10:40.603603607 +0900
+++ ../CMakeLists.txt	2011-01-31 23:57:13.560661475 +0900
@@ -2,6 +2,7 @@
 # requires rospack, and we're in the process of building rospack.
 cmake_minimum_required(VERSION 2.4.6)
 set(CMAKE_BUILD_TYPE Release)
+set(CMAKE_VERBOSE_MAKEFILE TRUE)
 
 set(CMAKE_INSTALL_PREFIX /tmp/rospack)
 #set(CMAKE_INSTALL_RPATH_USE_LINK_RPATH true)
@@ -41,9 +42,16 @@
   # Prevent deletion of existing lib of same name
   set_target_properties(rospack PROPERTIES CLEAN_DIRECT_OUTPUT 1)
   set_target_properties(rosstack PROPERTIES CLEAN_DIRECT_OUTPUT 1)
+
+  if(HOST_TOOLS)
+    set_target_properties(rospack PROPERTIES OUTPUT_NAME "rospack_native")
+    set_target_properties(rosstack PROPERTIES OUTPUT_NAME "rosstack_native")
+    # else defaults to rospack, rosstack
+  endif(HOST_TOOLS)
 endif(ROS_BUILD_SHARED_LIBS)
 
 if(ROS_BUILD_STATIC_LIBS)
+  add_definitions("-DROS_STATIC")
   # If we're only building static libs, then they get the default CMake
   # target name.
   if(NOT ROS_BUILD_SHARED_LIBS)
@@ -58,8 +66,14 @@
   add_library(${static_rosstack} STATIC ${rosstack_sources})
 
   # Set output name to be the same as shared lib (may not work on Windows)
-  set_target_properties(${static_rospack} PROPERTIES OUTPUT_NAME "rospack")
-  set_target_properties(${static_rosstack} PROPERTIES OUTPUT_NAME "rosstack")
+  if(HOST_TOOLS)
+    set_target_properties(${static_rospack} PROPERTIES OUTPUT_NAME "rospack_native")
+    set_target_properties(${static_rosstack} PROPERTIES OUTPUT_NAME "rosstack_native")
+  else(HOST_TOOLS)
+    set_target_properties(${static_rospack} PROPERTIES OUTPUT_NAME "rospack")
+    set_target_properties(${static_rosstack} PROPERTIES OUTPUT_NAME "rosstack")
+  endif(HOST_TOOLS)
+
   # Also add -fPIC, because CMake leaves it out when building static
   # libs, even though it's necessary on 64-bit machines for linking this
   # lib against shared libs downstream.
@@ -71,15 +85,20 @@
   set_target_properties(${static_rosstack} PROPERTIES CLEAN_DIRECT_OUTPUT 1)
 endif(ROS_BUILD_STATIC_LIBS)
 
+target_link_libraries(rosstack rospack)
+
 set(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/lib)
-set(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/../../bin)
+if(CMAKE_CROSSCOMPILING)
+  file(WRITE ${CMAKE_SOURCE_DIR}/cross_compiled "")
+  set(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)
+else()
+  set(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/../../bin)
+endif()
 
 add_executable(rospackexe main.cpp)
-set_target_properties(rospackexe PROPERTIES OUTPUT_NAME rospack)
-target_link_libraries(rosstack rospack)
 add_executable(rosstackexe rosstack_main.cpp)
+set_target_properties(rospackexe PROPERTIES OUTPUT_NAME rospack)
 set_target_properties(rosstackexe PROPERTIES OUTPUT_NAME rosstack)
-
 target_link_libraries(rospackexe rospack)
 target_link_libraries(rosstackexe rosstack rospack)
 
